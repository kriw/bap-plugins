000001bf: program
00000052: sub __libc_csu_fini()
00000002: 
000001c3: FS_BASE.1 := phi()
000001c5: RSP.1 := phi()
000001c7: mem.1 := phi()
000001ea: RSP.2 := RSP.1 - 0x18
000001eb: RAX.2 := mem.1[FS_BASE.1 + 0x28, el]:u64
000001ec: mem.2 := mem.1 with [RSP.2 + 8, el]:u64 <- RAX.2
000001ee: RAX.4 := mem.2[RSP.2 + 8, el]:u64
000001ef: RAX.5 := RAX.4 ^ mem.2[FS_BASE.1 + 0x28, el]:u64
000001f0: ZF.2 := 0 = RAX.5
00000021: when ~ZF.2 goto %0000001c
00000020: goto %0000001d

0000001c: 
0000001f: goto %00000023

0000001d: 
00000022: goto %00000046

00000023: 
000001f1: RSP.6 := RSP.2 - 8
00000026: call @sub_5d0 with return %00000027

00000027: 
000001f8: v195.2 := low:8[low:32[RAX.5]]
000001f9: h197.2 := mem.2[RAX.5] + v195.2
000001fa: mem.9 := mem.2 with [RAX.5] <- h197.2
000001fb: RSP.9 := RSP.6 - 8
000001fc: RSP.10 := RSP.9 + 8
000001fd: v205.2 := mem.9[RSP.10, el]:u64
00000045: return v205.2

00000046: 
000001ff: RSP.13 := RSP.2 + 0x18
00000200: v233.2 := mem.2[RSP.13, el]:u64
00000051: return v233.2


000000ec: sub __libc_csu_init()
00000053: 
00000202: FS_BASE.1 := phi()
00000203: R12.1 := phi()
00000204: R13.1 := phi()
00000205: R14.1 := phi()
00000206: R15.1 := phi()
00000208: RBP.1 := phi()
00000209: RBX.1 := phi()
0000020a: RDI.1 := phi()
0000020b: RDX.1 := phi()
0000020c: RSI.1 := phi()
0000020d: RSP.1 := phi()
0000020e: mem.1 := phi()
0000036c: RSP.2 := RSP.1 - 8
0000036d: mem.2 := mem.1 with [RSP.2, el]:u64 <- R15.1
00000370: RSP.3 := RSP.2 - 8
00000371: mem.3 := mem.2 with [RSP.3, el]:u64 <- R14.1
00000374: RSP.4 := RSP.3 - 8
00000375: mem.4 := mem.3 with [RSP.4, el]:u64 <- R13.1
00000378: RSP.5 := RSP.4 - 8
00000379: mem.5 := mem.4 with [RSP.5, el]:u64 <- R12.1
0000037a: R12.2 := 0x1DD8
0000037c: RSP.6 := RSP.5 - 8
0000037d: mem.6 := mem.5 with [RSP.6, el]:u64 <- RBP.1
0000037e: RBP.2 := 0x1DE0
00000380: RSP.7 := RSP.6 - 8
00000381: mem.7 := mem.6 with [RSP.7, el]:u64 <- RBX.1
00000383: RSP.8 := RSP.7 - 0x18
00000384: RAX.2 := mem.7[FS_BASE.1 + 0x28, el]:u64
00000385: mem.8 := mem.7 with [RSP.8 + 8, el]:u64 <- RAX.2
00000387: RSP.9 := RSP.8 - 8
00000087: call @sub_578 with return %00000088

00000088: 
00000397: RBP.6 := RBP.2 ~>> 3
00000398: ZF.3 := 0 = RBP.6
00000096: when ZF.3 goto %00000091
00000095: goto %00000092

00000091: 
00000094: goto %000000bf

00000092: 
00000097: goto %00000098

00000098: 
000000a0: goto %000000a1

000000a1: 
00000265: FS_BASE.7 := phi([FS_BASE.1, %00000098], [FS_BASE.7, %000000b8])
00000266: R12.8 := phi([R12.2, %00000098], [R12.8, %000000b8])
00000267: R13.8 := phi([R13.1, %00000098], [R13.8, %000000b8])
00000268: R14.8 := phi([R14.1, %00000098], [R14.8, %000000b8])
00000269: R15.8 := phi([R15.1, %00000098], [R15.8, %000000b8])
0000026a: RAX.9 := phi([RAX.2, %00000098], [RAX.9, %000000b8])
0000026b: RBP.10 := phi([RBP.6, %00000098], [RBP.10, %000000b8])
0000026c: RBX.8 := phi([RBX.1, %00000098], [RBX.11, %000000b8])
0000026d: RDI.7 := phi([RDI.1, %00000098], [RDI.7, %000000b8])
0000026e: RDX.7 := phi([RDX.1, %00000098], [RDX.7, %000000b8])
0000026f: RSI.7 := phi([RSI.1, %00000098], [RSI.7, %000000b8])
00000270: RSP.15 := phi([RSP.9, %00000098], [RSP.16, %000000b8])
00000271: ZF.7 := phi([ZF.3, %00000098], [ZF.7, %000000b8])
00000272: mem.15 := phi([mem.8, %00000098], [mem.15, %000000b8])
00000273: v154.7 := phi([R15.1, %00000098], [v154.7, %000000b8])
00000274: v155.7 := phi([R14.1, %00000098], [v155.7, %000000b8])
00000275: v156.7 := phi([R13.1, %00000098], [v156.7, %000000b8])
00000276: v157.7 := phi([R12.1, %00000098], [v157.7, %000000b8])
00000277: v158.7 := phi([RBP.1, %00000098], [v158.7, %000000b8])
00000278: v159.7 := phi([RBX.1, %00000098], [v159.7, %000000b8])
0000039d: v166.2 := mem.15[R12.8 + (RBX.8 << 3), el]:u64
0000039e: RSP.16 := RSP.15 - 8
000000a8: call v166.2 with return %000000a9

000000a9: 
000003ae: RBX.11 := RBX.8 + 1
000003af: v187.2 := RBP.10 - RBX.11
000003b0: ZF.10 := 0 = v187.2
000000bd: when ~ZF.10 goto %000000b8
000000bc: goto %000000b9

000000b8: 
000000bb: goto %000000a1

000000b9: 
000000be: goto %000000bf

000000bf: 
000002bc: FS_BASE.12 := phi([FS_BASE.1, %00000091], [FS_BASE.7, %000000b9])
000002c7: RSP.21 := phi([RSP.9, %00000091], [RSP.16, %000000b9])
000002c9: mem.21 := phi([mem.8, %00000091], [mem.15, %000000b9])
000003b1: RAX.15 := mem.21[RSP.21 + 8, el]:u64
000003b2: RAX.16 := RAX.15 ^ mem.21[FS_BASE.12 + 0x28, el]:u64
000003b3: ZF.14 := 0 = RAX.16
000000cd: when ~ZF.14 goto %000000c8
000000cc: goto %000000c9

000000c8: 
000000cb: goto %000000cf

000000c9: 
000000ce: goto %000000d4

000000cf: 
000000d2: call @sub_5d0 with return %000000d3

000000d3: 

000000d4: 
000003c4: RSP.29 := RSP.21 + 0x18
000003c6: RSP.30 := RSP.29 + 8
000003c8: RSP.31 := RSP.30 + 8
000003ca: RSP.32 := RSP.31 + 8
000003cc: RSP.33 := RSP.32 + 8
000003ce: RSP.34 := RSP.33 + 8
000003d0: RSP.35 := RSP.34 + 8
000003d1: v181.2 := mem.21[RSP.35, el]:u64
000000eb: return v181.2


00000130: sub _start()
000000ed: 
000003d3: RAX.1 := phi()
000003d5: RSP.1 := phi()
000003d6: mem.1 := phi()
0000042d: RSP.2 := RSP.1 + 8
0000042f: RSP.3 := RSP.2 & 0xFFFFFFFFFFFFFFF0
00000431: RSP.4 := RSP.3 - 8
00000432: mem.2 := mem.1 with [RSP.4, el]:u64 <- RAX.1
00000434: RSP.5 := RSP.4 - 8
00000435: mem.3 := mem.2 with [RSP.5, el]:u64 <- RSP.4
00000439: v174.2 := mem.3[0x1FC0, el]:u64
0000010c: call v174.2 with return %0000010d

0000010d: 
00000442: RDI.4 := 0x2030
00000443: RAX.4 := 0x2030
00000444: v206.2 := RAX.4 - RDI.4
00000445: ZF.3 := 0 = v206.2
0000011c: when ZF.3 goto %00000117
0000011b: goto %00000118

00000117: 
0000011a: goto 0x638

00000118: 
0000011d: goto %0000011e

0000011e: 
00000446: RAX.8 := mem.3[0x1FD0, el]:u64
00000448: ZF.7 := 0 = RAX.8
0000012c: when ZF.7 goto %00000127
0000012b: goto %00000128

00000127: 
0000012a: goto 0x638

00000128: 
0000012d: goto %0000012e

0000012e: 
0000012f: goto RAX.8


0000018b: sub main(main_argc, main_argv, main_result)
000001c0: main_argc :: in u32 = RDI
000001c1: main_argv :: in out u64 = RSI
000001c2: main_result :: out u32 = RAX
00000131: 
0000044b: RBP.1 := phi()
0000044c: RDI.1 := phi()
0000044e: RSP.1 := phi()
00000451: mem.1 := phi()
000004bf: RSP.2 := RSP.1 - 8
000004c0: mem.2 := mem.1 with [RSP.2, el]:u64 <- RBP.1
000004c3: mem.3 := mem.2
                       with [RSP.2 + 0xFFFFFFFFFFFFFFEC, el]:u32 <- low:32[RDI.1]
000004c4: RAX.2 := pad:64[mem.3[RSP.2 + 0xFFFFFFFFFFFFFFEC, el]:u32]
000004c5: RDX.2 := pad:64[low:32[RAX.2 + 3]]
000004c6: RAX.3 := pad:64[low:32[RDX.2]]
000004c7: RAX.4 := pad:64[low:32[RAX.3] << (2 & 0x20 - 1)]
000004c8: v215.2 := low:32[RDX.2]
000004c9: RAX.5 := pad:64[low:32[RAX.4] + v215.2]
000004ca: v218.2 := low:32[RAX.5]
000004cb: RAX.6 := pad:64[low:32[RAX.5] + v218.2]
000004cc: v221.2 := low:32[RDX.2]
000004cd: RAX.7 := pad:64[low:32[RAX.6] + v221.2]
000004ce: mem.4 := mem.3
                       with [RSP.2 + 0xFFFFFFFFFFFFFFFC, el]:u32 <- low:32[RAX.7]
000004cf: v223.2 := mem.4[RSP.2 + 0xFFFFFFFFFFFFFFFC, el]:u32 - 2
000004d0: OF.2 := high:1[(mem.4[RSP.2 + 0xFFFFFFFFFFFFFFFC, el]:u32 ^ 2) & (
mem.4[RSP.2 + 0xFFFFFFFFFFFFFFFC, el]:u32 ^ v223.2)]
000004d1: SF.2 := high:1[v223.2]
000004d2: ZF.2 := 0 = v223.2
00000172: when ZF.2 | SF.2 ^ OF.2 goto %0000016d
00000171: goto %0000016e

0000016d: 
00000170: goto %00000174

0000016e: 
00000173: goto %00000179

00000174: 
00000178: call @sub_5c0 with return %00000183

00000179: 
00000180: call @sub_5b0 with return %00000181

00000181: 
00000182: goto %00000183

00000183: 
0000049f: RBP.10 := phi([RSP.2, %00000174], [RSP.2, %00000181])
000004a5: mem.14 := phi([mem.4, %00000174], [mem.4, %00000181])
000004f1: RSP.15 := RBP.10 + 8
000004f2: v182.2 := mem.14[RSP.15, el]:u64
0000018a: return v182.2


000001b5: sub sub_578()
0000018c: 
000004f5: RSP.1 := phi()
000004f7: mem.1 := phi()
00000515: RAX.2 := mem.1[0x1FC8, el]:u64
00000517: ZF.2 := 0 = RAX.2
000001a2: when ZF.2 goto %0000019d
000001a1: goto %0000019e

0000019d: 
000001a0: goto %000001a9

0000019e: 
000001a3: goto %000001a4

000001a4: 
00000519: RSP.6 := RSP.1 - 8
000001a8: call RAX.2 with return %000001a9

000001a9: 
0000050a: RSP.8 := phi([RSP.1, %0000019d], [RSP.6, %000001a4])
0000050c: mem.7 := phi([mem.1, %0000019d], [mem.1, %000001a4])
0000051f: RSP.9 := RSP.8 + 8
00000520: v170.2 := mem.7[RSP.9, el]:u64
000001b4: return v170.2


000001b8: sub sub_5b0()
000001b6: 
00000522: mem.1 := phi()
000001b7: goto mem.1[0x2008, el]:u64


000001bb: sub sub_5c0()
000001b9: 
00000523: mem.1 := phi()
000001ba: goto mem.1[0x2010, el]:u64


000001be: sub sub_5d0()
000001bc: 
00000524: mem.1 := phi()
000001bd: goto mem.1[0x2018, el]:u64



