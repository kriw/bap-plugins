000001d9: program
00000052: sub __libc_csu_fini()
00000002: 
000001dd: FS_BASE.1 := phi()
000001df: RSP.1 := phi()
000001e1: mem.1 := phi()
00000204: RSP.2 := RSP.1 - 0x18
00000205: RAX.2 := mem.1[FS_BASE.1 + 0x28, el]:u64
00000206: mem.2 := mem.1 with [RSP.2 + 8, el]:u64 <- RAX.2
00000208: RAX.4 := mem.2[RSP.2 + 8, el]:u64
00000209: RAX.5 := RAX.4 ^ mem.2[FS_BASE.1 + 0x28, el]:u64
0000020a: ZF.2 := 0 = RAX.5
00000021: when ~ZF.2 goto %0000001c
00000020: goto %0000001d

0000001c: 
0000001f: goto %00000023

0000001d: 
00000022: goto %00000046

00000023: 
0000020b: RSP.6 := RSP.2 - 8
00000026: call @sub_590 with return %00000027

00000027: 
00000212: v185.2 := low:8[low:32[RAX.5]]
00000213: h187.2 := mem.2[RAX.5] + v185.2
00000214: mem.9 := mem.2 with [RAX.5] <- h187.2
00000215: RSP.9 := RSP.6 - 8
00000216: RSP.10 := RSP.9 + 8
00000217: v195.2 := mem.9[RSP.10, el]:u64
00000045: return v195.2

00000046: 
00000219: RSP.13 := RSP.2 + 0x18
0000021a: v228.2 := mem.2[RSP.13, el]:u64
00000051: return v228.2


000000ec: sub __libc_csu_init()
00000053: 
0000021c: FS_BASE.1 := phi()
0000021d: R12.1 := phi()
0000021e: R13.1 := phi()
0000021f: R14.1 := phi()
00000220: R15.1 := phi()
00000222: RBP.1 := phi()
00000223: RBX.1 := phi()
00000224: RDI.1 := phi()
00000225: RDX.1 := phi()
00000226: RSI.1 := phi()
00000227: RSP.1 := phi()
00000228: mem.1 := phi()
00000386: RSP.2 := RSP.1 - 8
00000387: mem.2 := mem.1 with [RSP.2, el]:u64 <- R15.1
0000038a: RSP.3 := RSP.2 - 8
0000038b: mem.3 := mem.2 with [RSP.3, el]:u64 <- R14.1
0000038e: RSP.4 := RSP.3 - 8
0000038f: mem.4 := mem.3 with [RSP.4, el]:u64 <- R13.1
00000392: RSP.5 := RSP.4 - 8
00000393: mem.5 := mem.4 with [RSP.5, el]:u64 <- R12.1
00000394: R12.2 := 0x1DD8
00000396: RSP.6 := RSP.5 - 8
00000397: mem.6 := mem.5 with [RSP.6, el]:u64 <- RBP.1
00000398: RBP.2 := 0x1DE0
0000039a: RSP.7 := RSP.6 - 8
0000039b: mem.7 := mem.6 with [RSP.7, el]:u64 <- RBX.1
0000039d: RSP.8 := RSP.7 - 0x18
0000039e: RAX.2 := mem.7[FS_BASE.1 + 0x28, el]:u64
0000039f: mem.8 := mem.7 with [RSP.8 + 8, el]:u64 <- RAX.2
000003a1: RSP.9 := RSP.8 - 8
00000087: call @sub_540 with return %00000088

00000088: 
000003b1: RBP.6 := RBP.2 ~>> 3
000003b2: ZF.3 := 0 = RBP.6
00000096: when ZF.3 goto %00000091
00000095: goto %00000092

00000091: 
00000094: goto %000000bf

00000092: 
00000097: goto %00000098

00000098: 
000000a0: goto %000000a1

000000a1: 
0000027f: FS_BASE.7 := phi([FS_BASE.1, %00000098], [FS_BASE.7, %000000b8])
00000280: R12.8 := phi([R12.2, %00000098], [R12.8, %000000b8])
00000281: R13.8 := phi([R13.1, %00000098], [R13.8, %000000b8])
00000282: R14.8 := phi([R14.1, %00000098], [R14.8, %000000b8])
00000283: R15.8 := phi([R15.1, %00000098], [R15.8, %000000b8])
00000284: RAX.9 := phi([RAX.2, %00000098], [RAX.9, %000000b8])
00000285: RBP.10 := phi([RBP.6, %00000098], [RBP.10, %000000b8])
00000286: RBX.8 := phi([RBX.1, %00000098], [RBX.11, %000000b8])
00000287: RDI.7 := phi([RDI.1, %00000098], [RDI.7, %000000b8])
00000288: RDX.7 := phi([RDX.1, %00000098], [RDX.7, %000000b8])
00000289: RSI.7 := phi([RSI.1, %00000098], [RSI.7, %000000b8])
0000028a: RSP.15 := phi([RSP.9, %00000098], [RSP.16, %000000b8])
0000028b: ZF.7 := phi([ZF.3, %00000098], [ZF.7, %000000b8])
0000028c: mem.15 := phi([mem.8, %00000098], [mem.15, %000000b8])
0000028d: v196.7 := phi([R15.1, %00000098], [v196.7, %000000b8])
0000028e: v197.7 := phi([R14.1, %00000098], [v197.7, %000000b8])
0000028f: v198.7 := phi([R13.1, %00000098], [v198.7, %000000b8])
00000290: v199.7 := phi([R12.1, %00000098], [v199.7, %000000b8])
00000291: v200.7 := phi([RBP.1, %00000098], [v200.7, %000000b8])
00000292: v201.7 := phi([RBX.1, %00000098], [v201.7, %000000b8])
000003b7: v213.2 := mem.15[R12.8 + (RBX.8 << 3), el]:u64
000003b8: RSP.16 := RSP.15 - 8
000000a8: call v213.2 with return %000000a9

000000a9: 
000003c8: RBX.11 := RBX.8 + 1
000003c9: v170.2 := RBP.10 - RBX.11
000003ca: ZF.10 := 0 = v170.2
000000bd: when ~ZF.10 goto %000000b8
000000bc: goto %000000b9

000000b8: 
000000bb: goto %000000a1

000000b9: 
000000be: goto %000000bf

000000bf: 
000002d6: FS_BASE.12 := phi([FS_BASE.1, %00000091], [FS_BASE.7, %000000b9])
000002e1: RSP.21 := phi([RSP.9, %00000091], [RSP.16, %000000b9])
000002e3: mem.21 := phi([mem.8, %00000091], [mem.15, %000000b9])
000003cb: RAX.15 := mem.21[RSP.21 + 8, el]:u64
000003cc: RAX.16 := RAX.15 ^ mem.21[FS_BASE.12 + 0x28, el]:u64
000003cd: ZF.14 := 0 = RAX.16
000000cd: when ~ZF.14 goto %000000c8
000000cc: goto %000000c9

000000c8: 
000000cb: goto %000000cf

000000c9: 
000000ce: goto %000000d4

000000cf: 
000000d2: call @sub_590 with return %000000d3

000000d3: 

000000d4: 
000003de: RSP.29 := RSP.21 + 0x18
000003e0: RSP.30 := RSP.29 + 8
000003e2: RSP.31 := RSP.30 + 8
000003e4: RSP.32 := RSP.31 + 8
000003e6: RSP.33 := RSP.32 + 8
000003e8: RSP.34 := RSP.33 + 8
000003ea: RSP.35 := RSP.34 + 8
000003eb: v175.2 := mem.21[RSP.35, el]:u64
000000eb: return v175.2


00000130: sub _start()
000000ed: 
000003ed: RAX.1 := phi()
000003ef: RSP.1 := phi()
000003f0: mem.1 := phi()
00000447: RSP.2 := RSP.1 + 8
00000449: RSP.3 := RSP.2 & 0xFFFFFFFFFFFFFFF0
0000044b: RSP.4 := RSP.3 - 8
0000044c: mem.2 := mem.1 with [RSP.4, el]:u64 <- RAX.1
0000044e: RSP.5 := RSP.4 - 8
0000044f: mem.3 := mem.2 with [RSP.5, el]:u64 <- RSP.4
00000453: v236.2 := mem.3[0x1FC0, el]:u64
0000010c: call v236.2 with return %0000010d

0000010d: 
0000045c: RDI.4 := 0x2028
0000045d: RAX.4 := 0x2028
0000045e: v176.2 := RAX.4 - RDI.4
0000045f: ZF.3 := 0 = v176.2
0000011c: when ZF.3 goto %00000117
0000011b: goto %00000118

00000117: 
0000011a: goto 0x5F8

00000118: 
0000011d: goto %0000011e

0000011e: 
00000460: RAX.8 := mem.3[0x1FD0, el]:u64
00000462: ZF.7 := 0 = RAX.8
0000012c: when ZF.7 goto %00000127
0000012b: goto %00000128

00000127: 
0000012a: goto 0x5F8

00000128: 
0000012d: goto %0000012e

0000012e: 
0000012f: goto RAX.8


00000148: sub add()
00000131: 
00000464: RBP.1 := phi()
00000465: RDI.1 := phi()
00000467: RSI.1 := phi()
00000468: RSP.1 := phi()
00000469: mem.1 := phi()
0000046e: RSP.2 := RSP.1 - 8
0000046f: mem.2 := mem.1 with [RSP.2, el]:u64 <- RBP.1
00000471: mem.3 := mem.2
                       with [RSP.2 + 0xFFFFFFFFFFFFFFFC, el]:u32 <- low:32[RDI.1]
00000472: mem.4 := mem.3
                       with [RSP.2 + 0xFFFFFFFFFFFFFFF8, el]:u32 <- low:32[RSI.1]
00000478: RSP.3 := RSP.2 + 8
00000479: v212.2 := mem.4[RSP.3, el]:u64
00000147: return v212.2


000001a8: sub main(main_argc, main_argv, main_result)
000001da: main_argc :: in u32 = RDI
000001db: main_argv :: in out u64 = RSI
000001dc: main_result :: out u32 = RAX
00000149: 
0000047b: RBP.1 := phi()
0000047c: RDI.1 := phi()
0000047d: RSP.1 := phi()
0000047e: mem.1 := phi()
00000525: RSP.2 := RSP.1 - 8
00000526: mem.2 := mem.1 with [RSP.2, el]:u64 <- RBP.1
00000529: mem.3 := mem.2
                       with [RSP.2 + 0xFFFFFFFFFFFFFFEC, el]:u32 <- low:32[RDI.1]
0000052a: mem.4 := mem.3 with [RSP.2 + 0xFFFFFFFFFFFFFFF8, el]:u32 <- 0
00000159: goto %0000015a

0000015a: 
00000482: RBP.3 := phi([RSP.2, %00000149], [RBP.3, %0000019b])
00000483: RDI.2 := phi([RDI.1, %00000149], [RDI.2, %0000019b])
00000484: RSP.4 := phi([RSP.2, %00000149], [RSP.22, %0000019b])
00000487: mem.6 := phi([mem.4, %00000149], [mem.24, %0000019b])
00000488: v164.3 := phi([RBP.1, %00000149], [v164.3, %0000019b])
0000052c: RAX.2 := pad:64[mem.6[RBP.3 + 0xFFFFFFFFFFFFFFFC, el]:u32]
0000052d: v230.2 := low:32[RAX.2] - mem.6[RBP.3 + 0xFFFFFFFFFFFFFFEC, el]:u32
0000052e: OF.2 := high:1[(low:32[RAX.2] ^ mem.6[RBP.3 + 0xFFFFFFFFFFFFFFEC, el]:u32) & (
low:32[RAX.2] ^ v230.2)]
0000052f: SF.2 := high:1[v230.2]
00000168: when SF.2 ^ OF.2 goto %00000163
00000167: goto %00000164

00000163: 
00000166: goto %00000193

00000164: 
00000169: goto %0000016a

0000016a: 
00000530: v182.2 := mem.6[RBP.3 + 0xFFFFFFFFFFFFFFF8, el]:u32 - 0x50
00000531: OF.6 := high:1[(mem.6[RBP.3 + 0xFFFFFFFFFFFFFFF8, el]:u32 ^ 0x50) & (
mem.6[RBP.3 + 0xFFFFFFFFFFFFFFF8, el]:u32 ^ v182.2)]
00000532: SF.6 := high:1[v182.2]
00000533: ZF.2 := 0 = v182.2
00000177: when ZF.2 | SF.6 ^ OF.6 goto %00000172
00000176: goto %00000173

00000172: 
00000175: goto %00000179

00000173: 
00000178: goto %00000181

00000179: 
00000180: call @sub_580 with return %0000018b

00000181: 
00000188: call @sub_580 with return %00000189

00000189: 
0000018a: goto %0000018b

0000018b: 
000004e8: RBP.14 := phi([RBP.3, %00000179], [RBP.3, %00000189])
000004ee: mem.19 := phi([mem.6, %00000179], [mem.6, %00000189])
00000555: RSP.19 := RBP.14 + 8
00000556: v229.2 := mem.19[RSP.19, el]:u64
00000192: return v229.2

00000193: 
00000559: RAX.20 := pad:64[mem.6[RBP.3 + 0xFFFFFFFFFFFFFFF8, el]:u32]
0000055c: RSP.22 := RSP.4 - 8
0000019a: call @add with return %0000019b

0000019b: 
00000567: mem.24 := mem.6
                        with [RBP.3 + 0xFFFFFFFFFFFFFFF8, el]:u32 <- low:32[RAX.20]
000001a7: goto %0000015a


000001d2: sub sub_540()
000001a9: 
0000056b: RSP.1 := phi()
0000056d: mem.1 := phi()
0000058b: RAX.2 := mem.1[0x1FC8, el]:u64
0000058d: ZF.2 := 0 = RAX.2
000001bf: when ZF.2 goto %000001ba
000001be: goto %000001bb

000001ba: 
000001bd: goto %000001c6

000001bb: 
000001c0: goto %000001c1

000001c1: 
0000058f: RSP.6 := RSP.1 - 8
000001c5: call RAX.2 with return %000001c6

000001c6: 
00000580: RSP.8 := phi([RSP.1, %000001ba], [RSP.6, %000001c1])
00000582: mem.7 := phi([mem.1, %000001ba], [mem.1, %000001c1])
00000595: RSP.9 := RSP.8 + 8
00000596: v181.2 := mem.7[RSP.9, el]:u64
000001d1: return v181.2


000001d5: sub sub_580()
000001d3: 
00000598: mem.1 := phi()
000001d4: goto mem.1[0x2008, el]:u64


000001d8: sub sub_590()
000001d6: 
00000599: mem.1 := phi()
000001d7: goto mem.1[0x2010, el]:u64



